!function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);var r=new MutationObserver(function(t){r.cbList.forEach(function(e){return e(t)})});r.cbList=[],r.observe(document.documentElement,{childList:!0,subtree:!0});var o=[];var i=function(t){o.indexOf(t.name)>-1||(o.push(t.name),document.querySelectorAll(t.extend.join()).forEach(function(e){r.observe(e,{attributes:!0,attributeFilter:t.attr}),e.getAttribute("is")===t.name&&t.update(e)}),r.cbList.push(function(e){for(var n=0,o=e.length;n<o;n++){var i=e[n];if(console.log(i),"attributes"===i.type&&i.target.getAttribute("is")===t.name&&t.extend.indexOf(i.target.nodeName)>-1)t.update(i.target);else if("childList"===i.type)for(var u=0,a=i.addedNodes.length;u<a;u++){var c=i.addedNodes[n];t.extend.indexOf(c.nodeName)>-1&&(r.observe(c,{attributes:!0,attributeFilter:t.attr}),c.getAttribute("is")===t.name&&t.update(c))}}}))};function u(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Number.NEGATIVE_INFINITY,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Number.POSITIVE_INFINITY,o=parseFloat(t);return Number.isNaN(o)?e:Math.max(n,Math.min(r,o))}function a(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Number.NEGATIVE_INFINITY,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Number.POSITIVE_INFINITY;return String(t).split(/[\s,]+/).map(function(t){return u(t,e,n,r)})}function c(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;return{x:n+t*Math.cos(e),y:r+t*Math.sin(e)}}function d(t){return{cx:u(t.getAttribute("cx")),cy:u(t.getAttribute("cy")),r:a(t.getAttribute("r"),0,0),vertex:u(t.getAttribute("vertex"),3,3)}}function f(t){for(var e=t.r,n=t.vertex,r=t.cx,o=t.cy,i=2*Math.PI/(n*e.length),u=e.map(function(t,e){var u=i*e-Math.PI/2;return function(t,e,n,r){for(var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Math.PI/2,i=[],u=2*Math.PI/r,a=0;a<r;a++){var d=o+a*u;i.push(c(n,d,t,e))}return i}(r,o,t,n,u)}),a=[],d=function(t){u.forEach(function(e){a.push(e[t].x,e[t].y)})},f=0;f<n;f++)d(f);return a.join()}var l={name:"n-star",extend:["path","polygon","polyline"],attr:["is","cx","cy","r","vertex"],update:function(t){var e="path"===t.nodeName?["d","M"+f(d(t))+"z"]:["points",f(d(t))];t.setAttribute.apply(t,e)}};new Promise(function(t){if("interactive"===document.readyState||"complete"===document.readyState)return t();window.addEventListener("DOMContentLoaded",t)}).then(function(){i(l)})}]);